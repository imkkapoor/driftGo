# This workflow will build and test the driftGo project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: driftGo CI/CD

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]

jobs:

  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: drift
          POSTGRES_PASSWORD: drift
          POSTGRES_DB: drift_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.3'

    - name: Install SQLC
      run: go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest

    - name: Install Goose
      run: go install github.com/pressly/goose/v3/cmd/goose@latest

    - name: Generate SQLC code
      run: sqlc generate -f sqlc.yaml

    - name: Run database migrations
      run: |
        export DATABASE_URL="postgres://drift:drift@localhost:5432/drift_test?sslmode=disable"
        goose -dir db/goose_migrations postgres "$DATABASE_URL" up

    - name: Format check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted. Please run 'go fmt ./...'"
          gofmt -s -l .
          exit 1
        fi

    - name: Vet check
      run: go vet ./...

    - name: Build
      run: go build -v ./cmd/server

    - name: Test
      run: go test -v ./...
      env:
        DATABASE_URL: postgres://drift:drift@localhost:5432/drift_test?sslmode=disable

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.3'

    - name: Install SQLC
      run: go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest

    - name: Generate SQLC code
      run: sqlc generate -f sqlc.yaml

    - name: Build binary
      run: |
        go build -ldflags "-X main.Version=$(git describe --tags --always --dirty)" -o driftGo ./cmd/server

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: driftGo-binary
        path: driftGo
        retention-days: 7
